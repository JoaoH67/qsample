# AUTOGENERATED! DO NOT EDIT! File to edit: 04_fault_generators.ipynb (unless otherwise specified).

__all__ = ['Depolar', 'ONE_QUBIT_FAULTS', 'TWO_QUBIT_FAULTS', 'DepolarSS']

# Cell
from .circuit import Circuit
import numpy as np
import itertools as it

# Cell

ONE_QUBIT_FAULTS = ["X", "Y", "Z"]
TWO_QUBIT_FAULTS = list(it.product(ONE_QUBIT_FAULTS + ["I"], repeat=2))
TWO_QUBIT_FAULTS.remove(("I","I"))

class Depolar:
    """Fault circuit generator for depolarizing circuit-level noise"""

    def __init__(self, n_ticks):
        self.n_ticks = n_ticks

    def select_fault_locs(self, partitions, probs):
        """Select fault locs by random number < p for elements in partitions"""
        return [loc for locs,p in zip(partitions, probs) for loc in locs if np.random.random() < p]

    def generate(self, partitions, ps_or_ws):
        """Place `faults` in empty circuit at circuit locations `fault_locs`"""

        fault_circuit = Circuit([{} for _ in range(self.n_ticks)])
        fault_locs = self.select_fault_locs(partitions, ps_or_ws)

        for (tick_index, qubit) in fault_locs:
            if type(qubit) == int:
                f_gate = np.random.choice(ONE_QUBIT_FAULTS)
                qb_set = fault_circuit[tick_index].get(f_gate, set())
                qb_set.add(qubit)
                fault_circuit[tick_index][f_gate] = qb_set
            elif type(qubit) == tuple:
                f_gates = TWO_QUBIT_FAULTS[np.random.choice(len(TWO_QUBIT_FAULTS))]
                for f_gate, qubit_i in zip(f_gates, qubit):
                    if f_gate != "I":
                        qb_set = fault_circuit[tick_index].get(f_gate, set())
                        qb_set.add(qubit_i)
                        fault_circuit[tick_index][f_gate] = qb_set
        return fault_circuit

# Cell
class DepolarSS(Depolar):
    def select_fault_locs(self, partitions, weights):
        """Select fault locs by random choice of w elements per partition"""
        return [par[i] for par,w in zip(partitions, weights) for i in np.random.choice(len(par),w,replace=False)]